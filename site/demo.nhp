var fs = require('fs');
var path = require('path');
var escape = require('escape-html');
var Renderer = require('@/nhp/lib/renderer');

async function renderDemo (file) {
    var demoFile = path.join(__dirname, 'demos/' + file);
    var demoContent = await new Promise((resolve, reject) => {
        fs.readFile(demoFile, 'utf8', (err, data) => {
            if (err) {
                reject(err);
            } else {
                resolve(data);
            }
        });
    });

    var demo = await include(demoFile, null, false);

    <section class="demo">
        <div class="wrap">
            if (demo.exports.title) {
                <h2>${ demo.exports.title }</h2>
            }

            if (demo.exports.description) {
                <p>${ demo.exports.description }</p>
            }
        </div>       

        <div class="demo-scripts wrap">
            <pre><code class="html">${ escape(demoContent) }</code></pre>
            <pre><code class="html">${ escape(demo.buffer) }</code></pre>
        </div>
    </section>
}

<!DOCTYPE html>
<html>

await include('./snippets/head.nhp');

<body>
    await include('./sections/header.nhp');
    await include('./snippets/nav-demos.nhp');

    var files = await new Promise((resolve, reject) => {
        fs.readdir(path.join(__dirname, 'demos'), (err, files) => {
            if (err) {
                reject(err);
            } else {
                resolve(files);
            }
        });
    });

    var promises = files.filter(item => item.match(/\.nhp$/)).map((demo) => {
        return renderDemo(demo);
    });

    await Promise.all(promises);

    <link rel="stylesheet" href="node_modules/highlight.js/styles/monokai.css">
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/highlight.min.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
</body>

</html>